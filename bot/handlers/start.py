"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
"""
from aiogram import Router, F
from aiogram.filters import CommandStart, StateFilter
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from utils.database import Database
from keyboards.reply import get_main_menu_keyboard, get_onboarding_keyboard, get_cancel_keyboard
from config import Config

router = Router()


class OnboardingStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞"""
    waiting_for_name = State()
    waiting_for_email = State()
    waiting_for_phone = State()


@router.message(CommandStart())
async def cmd_start(message: Message, state: FSMContext, db: Database, config: Config):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç deep linking –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –æ–ø—Ä–æ—Å–∞: /start quiz_123
    """
    telegram_id = message.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ deep link (–Ω–∞–ø—Ä–∏–º–µ—Ä, 123 - —ç—Ç–æ quiz_id)
    args = message.text.split(maxsplit=1)
    quiz_id = args[1] if len(args) > 1 else None
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î
    user = await db.get_user_by_telegram_id(telegram_id)
    
    
    if user:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        is_admin = user.get('is_admin', False) or telegram_id == config.superadmin_id
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å quiz_id - –°–†–ê–ó–£ –æ—Ç–∫—Ä—ã–≤–∞–µ–º WebApp
        if quiz_id:
            webapp_url = f"{config.webapp_url}/quiz/{quiz_id}"
            
            from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üìù –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å", web_app=WebAppInfo(url=webapp_url))]
            ])
            
            await message.answer(
                "üìù –û–ø—Ä–æ—Å",
                reply_markup=keyboard
            )
        else:
            await message.answer(
                f"üëã –° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user.get('first_name', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å')}!\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.",
                reply_markup=get_main_menu_keyboard(is_admin, config.webapp_url)
            )
    else:
        # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Å–æ–∑–¥–∞–µ–º —Å –±–∞–∑–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        await db.create_user(
            telegram_id=telegram_id,
            username=message.from_user.username,
            first_name=message.from_user.first_name,
            last_name=message.from_user.last_name
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–æ–º
        is_superadmin = telegram_id == config.superadmin_id
        if is_superadmin:
            await db.update_user(telegram_id, is_admin=True)
        
        is_admin = is_superadmin
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å quiz_id - –°–†–ê–ó–£ –æ—Ç–∫—Ä—ã–≤–∞–µ–º WebApp
        if quiz_id:
            webapp_url = f"{config.webapp_url}/quiz/{quiz_id}"
            
            from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="üìù –ü—Ä–æ–π—Ç–∏ –æ–ø—Ä–æ—Å", web_app=WebAppInfo(url=webapp_url))]
            ])
            
            await message.answer(
                "üìù –û–ø—Ä–æ—Å",
                reply_markup=keyboard
            )
        else:
            await message.answer(
                "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
                "–Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –æ–ø—Ä–æ—Å–æ–≤.\n\n"
                f"{'üîë –í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä.' if is_admin else '–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –æ–ø—Ä–æ—Å—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏.'}",
                reply_markup=get_main_menu_keyboard(is_admin, config.webapp_url)
            )


@router.message(F.text == "‚ÑπÔ∏è –û –±–æ—Ç–µ")
async def about_bot(message: Message):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"""
    await message.answer(
        "üìä <b>–í–∏–∑—É–∞–ª—å–Ω—ã–π –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –û–ø—Ä–æ—Å–æ–≤</b>\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç:\n"
        "‚Ä¢ –°–æ–∑–¥–∞–≤–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –æ–ø—Ä–æ—Å—ã —Å —É—Å–ª–æ–≤–Ω–æ–π –ª–æ–≥–∏–∫–æ–π\n"
        "‚Ä¢ –ü—Ä–æ—Ö–æ–¥–∏—Ç—å –æ–ø—Ä–æ—Å—ã –≤ —É–¥–æ–±–Ω–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ\n"
        "‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏\n"
        "‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ CSV/Excel\n\n"
        "–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π:\n"
        "Python (aiogram, FastAPI) + React + PostgreSQL",
        parse_mode="HTML"
    )


@router.message(F.text == "üìä –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
async def admin_panel_text(message: Message, db: Database, config: Config):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤–æ–π –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    telegram_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    is_admin = await db.is_admin(telegram_id) or telegram_id == config.superadmin_id
    
    if not is_admin:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return
    
    await message.answer(
        "üìä <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>\n\n"
        "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤—ã—à–µ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.",
        parse_mode="HTML"
    )


# ==================== –û–ù–ë–û–†–î–ò–ù–ì ====================
# –≠—Ç–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏

@router.message(StateFilter(OnboardingStates.waiting_for_name))
async def process_name(message: Message, state: FSMContext, db: Database):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏"""
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        await state.clear()
        await message.answer(
            "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.",
            reply_markup=ReplyKeyboardRemove()
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è
    telegram_id = message.from_user.id
    await db.update_user(telegram_id, first_name=message.text)
    
    await state.clear()
    await message.answer(
        "‚úÖ –ò–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!",
        reply_markup=ReplyKeyboardRemove()
    )


@router.message(StateFilter(OnboardingStates.waiting_for_email))
async def process_email(message: Message, state: FSMContext, db: Database):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ email"""
    if message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        await state.clear()
        await message.answer(
            "–í–≤–æ–¥ email –æ—Ç–º–µ–Ω–µ–Ω.",
            reply_markup=ReplyKeyboardRemove()
        )
        return
    
    # –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è email
    if "@" not in message.text or "." not in message.text:
        await message.answer("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º email
    telegram_id = message.from_user.id
    await db.update_user(telegram_id, email=message.text)
    
    await state.clear()
    await message.answer(
        "‚úÖ Email —Å–æ—Ö—Ä–∞–Ω–µ–Ω!",
        reply_markup=ReplyKeyboardRemove()
    )


@router.message(StateFilter(OnboardingStates.waiting_for_phone), F.contact)
async def process_phone_contact(message: Message, state: FSMContext, db: Database):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞ —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    phone = message.contact.phone_number
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω
    telegram_id = message.from_user.id
    await db.update_user(telegram_id, phone=phone)
    
    await state.clear()
    await message.answer(
        "‚úÖ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!",
        reply_markup=ReplyKeyboardRemove()
    )
